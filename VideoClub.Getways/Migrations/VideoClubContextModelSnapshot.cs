// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoClub.Repository.Contexto.VideoClub.Repository.Contexto;

#nullable disable

namespace VideoClub.Repository.Migrations
{
    [DbContext(typeof(VideoClubContext))]
    partial class VideoClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VideoClub.Entities.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idactor");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreActor")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar")
                        .HasColumnName("nombreactor");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("actores", (string)null);
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcatalogo");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnlaceTrailer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("trailer");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idcategoria");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("poster");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("resumen");

                    b.Property<int?>("Temporadas")
                        .HasColumnType("int")
                        .HasColumnName("temoradas");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("titulo");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("catalogo", (string)null);
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcategoria");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar")
                        .HasColumnName("categoria");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("categorias", (string)null);
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idgenero");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreGenero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar")
                        .HasColumnName("genero");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("generos", (string)null);
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.GeneroTrailer", b =>
                {
                    b.Property<int>("IdCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.HasKey("IdCatalogo", "IdGenero");

                    b.HasIndex("IdGenero");

                    b.ToTable("generotrailer", (string)null);
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Reparto", b =>
                {
                    b.Property<int>("IdTrailer")
                        .HasColumnType("int")
                        .HasColumnName("idtrailer");

                    b.Property<int>("IdActor")
                        .HasColumnType("int")
                        .HasColumnName("idactor");

                    b.HasKey("IdTrailer", "IdActor");

                    b.HasIndex("IdActor");

                    b.ToTable("reparto", (string)null);
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Catalogo", b =>
                {
                    b.HasOne("VideoClub.Entities.Entities.Categoria", "Categoria")
                        .WithMany("Catalogos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.GeneroTrailer", b =>
                {
                    b.HasOne("VideoClub.Entities.Entities.Catalogo", "Catalogo")
                        .WithMany("GeneroTrailers")
                        .HasForeignKey("IdCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoClub.Entities.Entities.Genero", "Genero")
                        .WithMany("GeneroTrailers")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Reparto", b =>
                {
                    b.HasOne("VideoClub.Entities.Entities.Actor", "Actor")
                        .WithMany("Reparto")
                        .HasForeignKey("IdActor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoClub.Entities.Entities.Catalogo", "Catalogo")
                        .WithMany("Repartos")
                        .HasForeignKey("IdTrailer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Actor", b =>
                {
                    b.Navigation("Reparto");
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Catalogo", b =>
                {
                    b.Navigation("GeneroTrailers");

                    b.Navigation("Repartos");
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Categoria", b =>
                {
                    b.Navigation("Catalogos");
                });

            modelBuilder.Entity("VideoClub.Entities.Entities.Genero", b =>
                {
                    b.Navigation("GeneroTrailers");
                });
#pragma warning restore 612, 618
        }
    }
}
